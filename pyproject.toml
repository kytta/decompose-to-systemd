# SPDX-FileCopyrightText: Â© 2023 Nikita Karamov <me@kytta.dev>
#
# SPDX-License-Identifier: BSD-2-Clause

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "decompose-to-systemd"
version = "0.1.0"
description = "Create systemd service definitions from Compose files"
readme = "README.md"
requires-python = ">=3.9"
license = "BSD-2-Clause"
authors = [
    { name = "Nikita Karamov", email = "me@kytta.dev" },
]
maintainers = [
    { name = "Nikita Karamov", email = "me@kytta.dev" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed"
]
dependencies = [
]

[project.scripts]
decompose-to-systemd = "decompose_to_systemd.__main__:_main"

[project.urls]
Repository = "https://github.com/kytta/decompose-to-systemd/"
"Bug tracker" = "https://github.com/kytta/decompose-to-systemd/issues"
Changelog = "https://github.com/kytta/decompose-to-systemd/blob/main/CHANGELOG.md"
Funding = "https://github.com/sponsors/kytta"

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "autopep8",
    "mypy>=1.2.0",
    "ruff>=0.0.262",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:decompose-to-systemd}"
style = [
    "ruff {args:.}",
    "autopep8 --diff --recursive {args:.}",
]
fmt = [
    "autopep8 --in-place --recursive {args:.}",
    "ruff --fix {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.autopep8]
ignore = ["W503"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_missing_imports = true
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_defs = false

[tool.ruff]
line-length = 79
format = "grouped"
show-source = true

select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "EXE",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "RUF",
]
extend-ignore = [
    "ANN101",
    "D100",
    "D104",
]
unfixable = [
    "ERA001",
]

[tool.ruff.per-file-ignores]
"src/*" = [
    "PT",
]
"tests/*" = [
    "ANN",  # type annotations
    "D",  # docstrings
    "FBT001",  # Boolean positional arg in function definition
    "PLR0913",  # too many function arguments
    "PLR2004",  # magic values
    "S101",  # use of assert detected
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true

[tool.ruff.pycodestyle]
max-doc-length = 72

[tool.ruff.pydocstyle]
convention = "pep257"
